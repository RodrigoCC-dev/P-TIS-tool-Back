build:
  image: ruby:2.6.6
  stage: build
  cache:
    key: ptis-tool-back
    paths:
      - apt-cache
      - vendor/ruby
      - node_modules/
    policy: pull
  script:
    - echo -e "production:\n  secret_key_base: $SECRET_ENV_VAR" > ./config/secrets.yml
    - cat ./config/secrets:yml
    - bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor
  before_script:
    - gem install bundler --no-document
    - SECRET_ENV_VAR=$(bundle exec rake secret)

.db:
  extends: build
  services:
    - postgres:10.14
  variables:
    POSTGRES_USER: root
    POSTGRES_PASSWORD: ''
    DB_USERNAME: root
    DB_PASSWORD: postgres
    DB_HOST: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
    RAILS_ENV: test
    DISABLE_SPRING: 1
    BUNDLE_PATH: vendor/bundle
  before_script:
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt update -qq && apt -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs
    - gem install bundler --no-document
    - bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor
    - bundle exec rails db:create db:migrate db:schema:load --trace

minitest:
  extends: .db
  stage: test
  cache:
    policy: pull-push
  artifacts:
    name: coverage
    paths:
      - coverage/
  script:
    - bundle exec rails db:test:prepare
    - bundle exec rails test
